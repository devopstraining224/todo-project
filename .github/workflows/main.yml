name: Build and deploy Backend application

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  workflow_dispatch:

jobs:
  build-angular:
    runs-on: ubuntu-latest
    env:
      SERVICE_NAME: Build angular application
      SERVICE_LOCATION: ./angular-front/todoMvcWithAngular

    steps:
      - name: Setup branch name
        run: |
          echo "BRANCH_NAME=$(echo ${{ github.ref }} | sed -e 's,.*/\(.*\),\1,')" >> $GITHUB_ENV

      - name: ${{ env.SERVICE_NAME }}
        uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '12'

      - name: Build angular project
        run: |
          cd ${{ env.SERVICE_LOCATION }}
          npm install
          npm run build

      - name: Build docker images
        run: |
          docker build -t ${{ secrets.DOCKER_USER_NAME }}/devops-training-angular:${{env.BRANCH_NAME}} ${{ env.SERVICE_LOCATION }}

      - name: Login to docker hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u ${{ secrets.DOCKER_USER_NAME }} --password-stdin

      - name: Push image to docker-hub
        run: |
          docker push ${{ secrets.DOCKER_USER_NAME }}/devops-training-angular:${{env.BRANCH_NAME}}





  build-react:
    runs-on: ubuntu-latest
    env:
      SERVICE_NAME: Build angular application
      SERVICE_LOCATION: ./angular-front/todoMvcWithAngular

    steps:
      - name: Setup branch name
        run: |
          echo "BRANCH_NAME=$(echo ${{ github.ref }} | sed -e 's,.*/\(.*\),\1,')" >> $GITHUB_ENV

      - name: ${{ env.SERVICE_NAME }}
        uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '12'

      - name: Build angular project
        run: |
          cd ${{ env.SERVICE_LOCATION }}
          npm install
          npm run build

      - name: Build docker images
        run: |
          docker build -t ${{ secrets.DOCKER_USER_NAME }}/devops-training-react:${{env.BRANCH_NAME}} ${{ env.SERVICE_LOCATION }}

      - name: Login to docker hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u ${{ secrets.DOCKER_USER_NAME }} --password-stdin

      - name: Push image to docker-hub
        run: |
          docker push ${{ secrets.DOCKER_USER_NAME }}/devops-training-react:${{env.BRANCH_NAME}}


